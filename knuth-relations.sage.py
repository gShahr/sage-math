

# This file was *autogenerated* from the file knuth-relations.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_3 = Integer(3); _sage_const_4 = Integer(4)
def knuth_first_relation(perm):
    n = len(perm)
    for i in range(n - _sage_const_2 ):
        if perm[i] < perm[i + _sage_const_2 ] < perm[i + _sage_const_1 ]:
            new_perm = perm[:i] + (perm[i + _sage_const_1 ], perm[i], perm[i + _sage_const_2 ]) + perm[i + _sage_const_3 :]
            yield new_perm

def knuth_second_relation(perm):
    n = len(perm)
    for i in range(n - _sage_const_2 ):
        if perm[i + _sage_const_1 ] < perm[i] < perm[i + _sage_const_2 ]:
            new_perm = perm[:i] + (perm[i + _sage_const_1 ], perm[i], perm[i + _sage_const_2 ]) + perm[i + _sage_const_3 :]
            yield new_perm

def apply_knuth_relations(perm):
    first_relations = list(knuth_first_relation(perm))
    second_relations = list(knuth_second_relation(perm))
    both_relations = first_relations + second_relations
    return first_relations, second_relations, both_relations

def insertion_tableau(perm):
    return Tableau(perm).to_schur()

perms = list(Permutations(_sage_const_4 ))

equivalence_classes = {}
for perm in perms:
    first_relations, second_relations, both_relations = apply_knuth_relations(perm)
    equivalence_classes[perm] = {
        'first': first_relations,
        'second': second_relations,
        'both': both_relations,
        'P-tableau': insertion_tableau(perm)
    }

for perm, relations in equivalence_classes.items():
    print(f"Permutation: {perm}")
    print(f"  First relations: {relations['first']}")
    print(f"  Second relations: {relations['second']}")
    print(f"  Both relations: {relations['both']}")
    print(f"  P-tableau: {relations['P-tableau']}")
    print()

